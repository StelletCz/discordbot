require('dotenv').config();
const { Client, GatewayIntentBits } = require('discord.js');

const client = new Client({
    intents: [GatewayIntentBits.Guilds, GatewayIntentBits.GuildMessages, GatewayIntentBits.MessageContent]
});

client.once('ready', () => {
    console.log(`‚úÖ P≈ôihl√°≈°en jako ${client.user.tag}`);
});

client.on('messageCreate', async (message) => {
    if (message.content === '!banka' && !message.author.bot) {
        // Aktu√°ln√≠ ƒças a datum
        const now = new Date();
        const datum = now.toLocaleDateString('cs-CZ'); // Form√°t: DD.MM.YYYY
        const cas = now.toLocaleTimeString('cs-CZ', { 
            hour: '2-digit', 
            minute: '2-digit', 
            second: '2-digit',
            timeZone: 'Europe/Prague' // Nastaven√≠ ƒçasov√© z√≥ny na Prahu
        });

        // ƒåas a datum o 1 hodinu pozdƒõji
        const nextHour = new Date(now.getTime() + 60 * 60 * 1000);
        const datum2 = nextHour.toLocaleDateString('cs-CZ');
        const cas2 = nextHour.toLocaleTimeString('cs-CZ', { 
            hour: '2-digit', 
            minute: '2-digit', 
            second: '2-digit',
            timeZone: 'Europe/Prague' // Nastaven√≠ ƒçasov√© z√≥ny na Prahu
        });

        // Po≈°le zpr√°vu
        await message.channel.send(`> üí∞   √ó   Banka byla vykradena **${datum}** ve **${cas}**.\n> ‚è≥   √ó   Dal≈°√≠ banka p≈Øjde **${datum2}** ve **${cas2}**.`);

        // Smaz√°n√≠ p≈ô√≠kazov√© zpr√°vy
        try {
            await message.delete();
        } catch (error) {
            if (error.code !== 10008) {
                console.error("Chyba p≈ôi maz√°n√≠ zpr√°vy:", error);
            }
        }
    }
    if (message.content === '!samoska' && !message.author.bot) {
        // Aktu√°ln√≠ ƒças a datum
        const now = new Date();
        const datum = now.toLocaleDateString('cs-CZ'); // Form√°t: DD.MM.YYYY
        const cas = now.toLocaleTimeString('cs-CZ', { 
            hour: '2-digit', 
            minute: '2-digit', 
            second: '2-digit',
            timeZone: 'Europe/Prague' // Nastaven√≠ ƒçasov√© z√≥ny na Prahu
        });

        // ƒåas a datum o 1 hodinu pozdƒõji
        const nextHour = new Date(now.getTime() + 60 * 60 * 1000);
        const datum2 = nextHour.toLocaleDateString('cs-CZ');
        const cas2 = nextHour.toLocaleTimeString('cs-CZ', { 
            hour: '2-digit', 
            minute: '2-digit', 
            second: '2-digit',
            timeZone: 'Europe/Prague' // Nastaven√≠ ƒçasov√© z√≥ny na Prahu
        });

        // Po≈°le zpr√°vu
        await message.channel.send(`> üõí   √ó   S√°mo≈°ka byla vykradena **${datum}** ve **${cas}**.\n> ‚è≥   √ó   Dal≈°√≠ s√°mo≈°ka p≈Øjde **${datum2}** ve **${cas2}**.`);

        // Smaz√°n√≠ p≈ô√≠kazov√© zpr√°vy
        try {
            await message.delete();
        } catch (error) {
            if (error.code !== 10008) {
                console.error("Chyba p≈ôi maz√°n√≠ zpr√°vy:", error);
            }
        }
    }
});

client.login(process.env.TOKEN);
